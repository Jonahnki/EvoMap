name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_ENV: test
  NEXT_TELEMETRY_DISABLED: 1

jobs:
  # Test and build with your exact setup
  test:
    name: Test & Build (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [18, 20]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript type checking
        run: npx tsc --noEmit

      - name: Run tests
        run: npm test

      - name: Build Next.js application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: matrix.node-version == '20'
        with:
          name: nextjs-build-${{ github.sha }}
          path: .next/
          retention-days: 7

  # Security audit
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level=high --production

      - name: Check for known vulnerabilities
        run: |
          if npm audit --audit-level=high --production; then
            echo "✅ No high-severity vulnerabilities found"
          else
            echo "⚠️ High-severity vulnerabilities detected"
            npm audit --audit-level=high --production
            exit 1
          fi

  # Docker build (optional)
  docker:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: evomap:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker container
        run: |
          docker run --rm -d --name evomap-test -p 3000:3000 evomap:test
          sleep 10
          
          # Basic health check
          if curl -f http://localhost:3000 >/dev/null 2>&1; then
            echo "✅ Docker container is healthy"
          else
            echo "❌ Docker container health check failed"
            docker logs evomap-test
            exit 1
          fi
          
          docker stop evomap-test

  # Deployment readiness check
  deploy-ready:
    name: Deployment Ready
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: All checks passed
        run: |
          echo "✅ Tests passed on Node.js 18 & 20"
          echo "✅ TypeScript compilation successful"
          echo "✅ ESLint checks passed"
          echo "✅ Next.js build successful"
          echo "✅ Security audit completed"
          echo "🚀 Ready for deployment!"

      - name: Deployment notification
        run: |
          echo "::notice title=Ready for Deployment::All CI checks passed for commit ${{ github.sha }}"
